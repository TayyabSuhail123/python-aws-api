name: Build, Test, Scan, and Push to ECR

on:
  push:
    branches:
      - main
      - test-semantic-release         
  workflow_dispatch:                


env:
  AWS_REGION: eu-central-1
  ECR_REPO: agent-runner-repo

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest --disable-warnings
      continue-on-error: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: npm

    - name: npm ci
      run: npm ci

    - name: semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
    
    - name: Get release tag
      id: tag
      run: |
        git fetch --tags
        TAG=$(git tag --sort=-v:refname | head -n1 || true)
        if [ -z "$TAG" ]; then TAG="v0.0.0"; fi

        echo "tag=$TAG" >> "$GITHUB_OUTPUT"
    

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ steps.tag.outputs.tag }}"
        docker build -t $IMAGE_URI .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ steps.tag.outputs.tag }}"
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    - name: Push Docker image to ECR
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ steps.tag.outputs.tag }}"
        docker push $IMAGE_URI
